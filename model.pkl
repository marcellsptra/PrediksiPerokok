import pandas as pd
import numpy as np
import joblib
import re
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier

# ===== 1. LOAD DATASET =====
data = pd.read_csv("smoking.csv", delimiter=';')
data = data.dropna()
data = data.drop(columns=['ID'])

# ===== 2. ENCODING =====
data['gender'] = data['gender'].map({'M': 1, 'F': 0})
for col in ['oral', 'dental_caries', 'tartar']:
    data[col] = data[col].map({'Y': 1, 'N': 0})

# ===== 3. CLEAN FLOAT VALUES =====
def clean_float(val):
    if isinstance(val, str):
        match = re.match(r'^(\d+(?:\.\d+){0,1})', val)
        return float(match.group(1)) if match else np.nan
    return val

cols_to_clean = [
    'waist(cm)', 'eyesight(left)', 'eyesight(right)',
    'hearing(left)', 'hearing(right)', 'systolic',
    'relaxation', 'fasting_blood_sugar', 'Cholesterol',
    'triglyceride', 'HDL', 'LDL', 'hemoglobin',
    'serum_creatinine', 'AST', 'ALT', 'Gtp'
]

for col in cols_to_clean:
    data[col] = data[col].apply(clean_float)
data = data.dropna()

# ===== 4. FITUR DAN TARGET =====
X = data.drop(columns=['smoking'])
Y = data['smoking']
expected_columns = X.columns.tolist()

# ===== 5. NORMALISASI =====
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# ===== 6. TRAIN MODEL =====
dt_model = DecisionTreeClassifier(random_state=42)
rf_model = RandomForestClassifier(random_state=42)

dt_model.fit(X_scaled, Y)
rf_model.fit(X_scaled, Y)

# ===== 7. SAVE FILES =====
joblib.dump(dt_model, "decision_tree_model.pkl")
joblib.dump(rf_model, "random_forest_model.pkl")
joblib.dump(scaler, "scaler.pkl")
joblib.dump(expected_columns, "expected_columns.pkl")

print("âœ… Semua file .pkl berhasil disimpan.")
